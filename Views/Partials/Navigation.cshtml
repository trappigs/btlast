@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage

@{
    var rootNode = Model.Root();
    var children = rootNode.Children().Where(x => x.IsVisible());
}

<link rel="stylesheet" href="/css/navigation.css">

<nav class="modern-nav">
    <div class="nav-container">
        <div class="nav-logo">
            <a href="/" class="logo-link">
                <span class="logo-text">BEREKETLİ TOPRAKLAR</span>
            </a>
        </div>

        <div class="nav-menu">
            <a href="@rootNode.Url()" class="nav-item @(Model.Id == rootNode.Id ? "active" : "")">
                ANA SAYFA
            </a>

            @foreach (var child in children)
            {
                var navTitle = child.HasValue("navigationTitle") ? child.Value("navigationTitle").ToString() : child.Name;
                var isActive = child.Id == Model.Id ? "active" : "";
                
                <a href="@child.Url()" class="nav-item @isActive">
                    @navTitle.ToUpper()
                </a>
            }
        </div>

        <button class="mobile-menu-btn" aria-label="Toggle mobile menu">
            <span></span>
            <span></span>
            <span></span>
        </button>
    </div>
    
    <!-- Mobile Menu Overlay -->
    <div class="mobile-menu-overlay"></div>
</nav>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
    const navMenu = document.querySelector('.nav-menu');
    const overlay = document.querySelector('.mobile-menu-overlay');
    const navbar = document.querySelector('.modern-nav');
    const body = document.body;
    const mainContent = document.querySelector('.main-content');

    // Bu fonksiyon, sadece masaüstü ekranlarda içerik boşluğunu ayarlar.
    function adjustContentPadding() {
        if (!navbar || !mainContent) return;

        // Mobil breakpoint'imiz 768px
        if (window.innerWidth > 768) {
            const navHeight = navbar.offsetHeight;
            mainContent.style.paddingTop = navHeight + 'px';
        } else {
            // Mobil ekranlarda padding'i sıfırla
            mainContent.style.paddingTop = '0';
        }
    }

    function openMobileMenu() {
        navMenu.classList.add('active');
        overlay.classList.add('active');
        body.style.overflow = 'hidden';

        const spans = mobileMenuBtn.querySelectorAll('span');
        spans[0].style.transform = 'rotate(45deg) translate(5px, 5px)';
        spans[1].style.opacity = '0';
        spans[2].style.transform = 'rotate(-45deg) translate(7px, -6px)';
    }

    function closeMobileMenu() {
        navMenu.classList.remove('active');
        overlay.classList.remove('active');
        body.style.overflow = 'auto';

        const spans = mobileMenuBtn.querySelectorAll('span');
        spans[0].style.transform = 'none';
        spans[1].style.opacity = '1';
        spans[2].style.transform = 'none';
    }

    // --- Olay Dinleyicileri ---

    // Sayfa yüklendiğinde ve pencere yeniden boyutlandırıldığında padding'i ayarla
    adjustContentPadding();
    window.addEventListener('resize', () => {
        adjustContentPadding();
        // Eğer ekran büyütülürken menü açıksa, kapat
        if (window.innerWidth > 768 && navMenu.classList.contains('active')) {
            closeMobileMenu();
        }
    });

    // Mobil menü butonları ve kapatma işlevleri
    if (mobileMenuBtn && navMenu) {
        mobileMenuBtn.addEventListener('click', () => {
            navMenu.classList.contains('active') ? closeMobileMenu() : openMobileMenu();
        });
        overlay.addEventListener('click', closeMobileMenu);
        navMenu.querySelectorAll('.nav-item').forEach(item => item.addEventListener('click', closeMobileMenu));
        document.addEventListener('keydown', e => {
            if (e.key === 'Escape' && navMenu.classList.contains('active')) {
                closeMobileMenu();
            }
        });
    }

    // Scroll'a göre navigasyon barını gizle/göster (Bu kısım aynı kalabilir)
    let lastScrollTop = 0;
    window.addEventListener('scroll', () => {
        if (navMenu.classList.contains('active')) return;
        let scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        if (scrollTop > lastScrollTop && scrollTop > navbar.offsetHeight) {
            navbar.classList.add('nav-hidden');
        } else {
            navbar.classList.remove('nav-hidden');
        }
        lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
    }, { passive: true });
});
</script>