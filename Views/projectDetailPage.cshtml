@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.Models
@using System.Text.RegularExpressions
@using System.Globalization
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
    Layout = "masterLayout.cshtml";
    <title>@(Model.HasValue("pageTitle") && !string.IsNullOrWhiteSpace(Model.Value<string>("pageTitle")) ? Model.Value<string>("pageTitle") : ViewBag.Title)</title>
    
    var currentUrl = $"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}";
    var siteUrl = $"{Context.Request.Scheme}://{Context.Request.Host}";

    // Hero background image
    // Hero background image - projectImage alanından çekilecek
    var heroBackground = "";
    if (Model.HasValue("projectImage"))
    {
        var heroBgImage = Model.Value<IPublishedContent>("projectImage");
        heroBackground = heroBgImage.Url();
    }

    // Alternatif olarak heroBackground alanı da kontrol edilebilir (yedek)
    if (string.IsNullOrEmpty(heroBackground) && Model.HasValue("heroBackground"))
    {
        var heroBgImage = Model.Value<IPublishedContent>("heroBackground");
        heroBackground = heroBgImage.Url();
    }

    // --- YENİ EKLENEN KOD BAŞLANGICI ---
    // Slugify fonksiyonu (ProjectCards.cshtml'den kopyalandı)
    Func<string, string> GenerateSlug = (phrase) =>
    {
        if (string.IsNullOrEmpty(phrase)) return "";
        string str = phrase.ToLower(new CultureInfo("tr-TR"));
        str = str.Replace("ı", "i").Replace("ğ", "g").Replace("ü", "u").Replace("ş", "s").Replace("ö", "o").Replace("ç", "c");
        str = Regex.Replace(str, @"[^a-z0-9\s-]", "");
        str = Regex.Replace(str, @"\s+", "-").Trim();
        str = Regex.Replace(str, @"-+", "-");
        str = str.Trim('-');
        return str;
    };

    // Proje listeleri (ProjectCards.cshtml'den kopyalandı)
    var projects = new[]
    {
        new { Name = "Çanakkale - Armoni", Image = "/media/jhzinuld/ai-generated-10.webp", Description = "Doğa ile uyum içinde, modern yaşamın konforunu sunan villa projesi. Deniz manzaralı parseller ile huzurun adresi." },
        new { Name = "Ayvalık - Çamoba", Image = "/media/vhppfiqd/ai-generated-8.webp", Description = "Ege'nin incisi Ayvalık'ta, zeytinlikler arasında konumlanmış özel villa parselleri. Denize sıfır konumu ile ayricalıklı." },
        new { Name = "İznik", Image = "/media/ztzphhod/ai-generated-9.webp", Description = "Tarihi İznik Gölü kıyısında, doğa ile iç içe yaşam alanları. Sakin ve huzurlu bir yaşam için ideal lokasyon." },
        new { Name = "Kocaeli", Image = "/media/3h2c1pqr/ai-generated-14.webp", Description = "İstanbul'a yakın konumu ile pratik ulaşım imkanı. Modern mimarisi ve geniş yaşam alanları ile öne çıkan proje." },
        new { Name = "Çanakkale", Image = "/media/t5bitov0/ai-generated-13.webp", Description = "Çanakkale'nin en prestijli bölgesinde, deniz ve doğa manzaralı lüks villa projeleri. Yatırım değeri yüksek parseller." },
        new { Name = "Düzce - Gümüşova", Image = "/media/k4fd0e14/ai-generated-11.webp", Description = "Karadeniz'in yeşili ile buluşan villa parselleri. Doğal yaşamın tadını çıkarabileceğiniz huzurlu bir ortam." }
    };
    var newProjects = new[]
    {
        new { Name = "Sakarya - Karasu", Image = "/media/jhzinuld/ai-generated-10.webp", Description = "Karadeniz'in parlayan yıldızı Karasu'da, yatırım değeri yüksek, denize yakın arsalar." },
        new { Name = "Bursa - Mudanya", Image = "/media/vhppfiqd/ai-generated-8.webp", Description = "Tarihi dokusu ve deniziyle öne çıkan Mudanya'da eşsiz yaşam alanları." },
        new { Name = "Yalova - Termal", Image = "/media/ztzphhod/ai-generated-9.webp", Description = "Termal suların şifasıyla, doğa içinde huzurlu bir yatırım fırsatı." },
        new { Name = "Balıkesir - Edremit", Image = "/media/3h2c1pqr/ai-generated-14.webp", Description = "Kaz Dağları'nın eteğinde, zeytinlikler arasında, oksijeni bol bir yaşam." },
        new { Name = "İzmir - Urla", Image = "/media/t5bitov0/ai-generated-13.webp", Description = "Ege'nin gözde tatil beldesi Urla'da, bağ evleri ve denize yakın parseller." },
        new { Name = "Muğla - Fethiye", Image = "/media/k4fd0e14/ai-generated-11.webp", Description = "Dünyaca ünlü plajlara yakın, doğa harikası Fethiye'de karlı bir yatırım." }
    };

    var allProjects = projects.Concat(newProjects);

    // Mevcut projenin adını al
    var currentProjectName = Model.Value<string>("projectName");

    // Mevcut proje hariç diğer projeleri filtrele ve rastgele 6 tane seç
    var otherProjects = allProjects.Where(p => p.Name != currentProjectName).OrderBy(x => Guid.NewGuid()).Take(6);
    // --- YENİ EKLENEN KOD SONU ---

    // --- YAPI_LANDIRILMIŞ VERİ İÇİN GEREKLİ DEĞİŞKENLER ---
    // Temel Proje Bilgileri
    var projectName = Model.Value<string>("projectName")?.Replace("\"", "\\\"");
    var projectDescription = Model.Value<string>("projectDescription")?.StripHtml().ToString().Replace("\"", "\\\"");

    // Proje Görselleri
    var imageList = new List<string>();
    var mainImage = Model.Value<IPublishedContent>("projectImage");
    if (mainImage != null)
    {
        imageList.Add($"\"{mainImage.Url(mode: UrlMode.Absolute)}\"");
    }
    var galleryImages = Model.Value<IEnumerable<IPublishedContent>>("projectGallery");
    if (galleryImages != null)
    {
        foreach (var galleryImage in galleryImages.Where(i => i.ContentType.Alias != "video")) // Videoları hariç tut
        {
            imageList.Add($"\"{galleryImage.Url(mode: UrlMode.Absolute)}\"");
        }
    }

    // Proje Özellikleri (İmarlı, Müstakil Tapulu vb.)
    var featuresList = new List<string>();
    // Bu özelliklerin sabit olduğunu varsayarak manuel ekliyoruz.
    // Eğer bunlar da CMS'ten geliyorsa, döngü ile eklenebilir.
    featuresList.Add(@"{ ""@type"": ""PropertyValue"", ""name"": ""İmar Durumu"", ""value"": ""İmarlı, Altyapısı Tamamlanmış"" }");
    featuresList.Add(@"{ ""@type"": ""PropertyValue"", ""name"": ""Tapu Durumu"", ""value"": ""Müstakil Tapulu"" }");
    featuresList.Add(@"{ ""@type"": ""PropertyValue"", ""name"": ""Teslimat"", ""value"": ""Hemen Teslim"" }");
    featuresList.Add(@"{ ""@type"": ""PropertyValue"", ""name"": ""Ödeme Planı"", ""value"": ""24 Aya Varan Taksit"" }");

    // Proje Videosu
    var videoUrl = "";
    if (galleryImages != null)
    {
        var videoItem = galleryImages.FirstOrDefault(item => item.ContentType.Alias == "video" || item.Url().EndsWith(".mp4"));
        if (videoItem != null)
        {
            videoUrl = videoItem.Url(mode: UrlMode.Absolute);
        }
    }
}

@* --- SEO İÇİN YAPILANDIRILMIŞ VERİ (JSON-LD) - ÜRÜN ŞEMASI --- *@
<script type="application/ld+json">
{
    "@@context": "https://schema.org",
    "@@type": "Product",
    "name": "@projectName",
    "description": "@Html.Raw(projectDescription)",
    "url": "@currentUrl",
    "sku": "@Model.Id", // Her proje için benzersiz bir kod olarak Umbraco ID'sini kullanıyoruz.
    "image": [@Html.Raw(string.Join(",", imageList))],
    "brand": {
        "@@type": "Organization",
        "name": "Bereketli Topraklar"
    },
    @if (!string.IsNullOrEmpty(videoUrl))
    {
        <text>
        "video": {
            "@@type": "VideoObject",
            "name": "@(projectName) Tanıtım Videosu",
            "description": "@Html.Raw(projectDescription)",
            "thumbnailUrl": "@(mainImage?.Url(mode: UrlMode.Absolute))",
            "contentUrl": "@videoUrl",
            "uploadDate": "@Model.CreateDate.ToString("yyyy-MM-dd")"
        },
        </text>
    }
    "offers": {
        "@@type": "Offer",
        "url": "@currentUrl",
        "priceCurrency": "TRY",
        "availability": "https://schema.org/InStock", // Proje satışta olduğu sürece
        "seller": {
            "@@type": "Organization",
            "name": "Bereketli Topraklar",
            "url": "@siteUrl"
        }
    },
    "additionalProperty": [
        @Html.Raw(string.Join(",", featuresList))
    ]
}
</script>










<link rel="stylesheet" href="/css/projectDetail.css">
<link rel="stylesheet" href="/css/project-cards.css">

@section Scripts {
    @if(Model.HasValue("virtualTourPath") && !string.IsNullOrEmpty(Model.Value<string>("virtualTourPath")))
    {
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                var krpano = null;

                // krpano'yu başlat
                embedpano({
                    xml: "@Model.Value("virtualTourPath")",
                    target: "pano",
                    html5: "auto",
                    mobilescale: 1.0,
                    passQueryParameters: true,
                    onready: function(krpano_interface){
                        krpano = krpano_interface;
                    }
                });

                // Gerekli HTML elementlerini seçiyoruz
                const fullscreenBtn = document.getElementById('fullscreen-btn');
                const panoPreview = document.getElementById('pano-preview');
                const closeBtn = document.getElementById('pano-close-btn');

                // Tam ekrana geçiş fonksiyonu
                function enterPanoFullscreen() {
                    if (panoPreview) {
                        panoPreview.classList.add('fullscreen');
                    }
                    if (krpano && typeof krpano.call === 'function') {
                        krpano.call('enterfullscreen();');
                    }
                }

                // Tam ekrandan çıkış fonksiyonu
                function exitPanoFullscreen() {
                    if (panoPreview) {
                        panoPreview.classList.remove('fullscreen');
                    }
                    if (krpano && typeof krpano.call === 'function') {
                        krpano.call('exitfullscreen();');
                    }
                }
                
                // Olay dinleyicilerini atıyoruz
                if(fullscreenBtn) {
                    fullscreenBtn.addEventListener('click', enterPanoFullscreen);
                }
                if(closeBtn) {
                    closeBtn.addEventListener('click', exitPanoFullscreen);
                }

                // ESC tuşuna basıldığında da tam ekrandan çıkmasını sağlıyoruz
                document.addEventListener('keydown', function(event) {
                    if (event.key === 'Escape' && panoPreview.classList.contains('fullscreen')) {
                        exitPanoFullscreen();
                    }
                });
            });
        </script>
    }
}



<div class="project-hero" style="@(string.IsNullOrEmpty(heroBackground) ? "" : $"background-image: url('{heroBackground}');")">
    <div class="hero-content">
        <h1 class="hero-title">@Model.Value("projectName")</h1>
        <p class="hero-subtitle">@Model.Value("projectLocation")</p>
    </div>
</div>

<div class="project-detail-wrapper">
    <div class="container">
        <div class="project-header-info">
            <div class="project-title-section feature-section-wrapper">
                <div class="feature-grid">
                    <div class="feature-card">
                        <h4>İmarlı</h4>
                        <p>Alt Yapısı Tamamlanmış</p>
                    </div>
                    <div class="feature-card">
                        <h4>Müstakil Tapulu</h4>
                        <p>Bağımsız Mülkiyet</p>
                    </div>
                    <div class="feature-card">
                        <h4>Hemen Teslim</h4>
                        <p>Anında Teslim</p>
                    </div>
                    <div class="feature-card">
                        <h4>24 Aya Varan Taksit</h4>
                        <p>Esnek Ödeme Planı</p>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="content-grid">
            <div class="image-section">
                @{
                    IPublishedContent mainMediaItem = null;
                    var isMainVideo = false;
                    
                    // Önce video ara
                    if (Model.HasValue("projectGallery"))
                    {
                        var galleryItems = Model.Value<IEnumerable<IPublishedContent>>("projectGallery").Take(10).ToList();
                        if (galleryItems.Any())
                        {
                            // İlk video'yu bul
                            var firstVideo = galleryItems.FirstOrDefault(item => 
                                item.ContentType.Alias == "video" || 
                                item.Url().EndsWith(".mp4") || 
                                item.Url().EndsWith(".webm") || 
                                item.Url().EndsWith(".ogg") ||
                                item.Url().EndsWith(".mov") ||
                                item.Url().EndsWith(".avi"));
                            if (firstVideo != null)
                            {
                                mainMediaItem = firstVideo;
                                isMainVideo = true;
                            }
                            else
                            {
                                // Video yoksa ilk resmi al
                                mainMediaItem = galleryItems.First();
                                isMainVideo = false;
                            }
                        }
                    }
                    
                    // Eğer gallery'de hiçbir şey yoksa, projectImage'i kullan
                    if (mainMediaItem == null && Model.HasValue("projectImage"))
                    {
                        mainMediaItem = Model.Value<IPublishedContent>("projectImage");
                        isMainVideo = false;
                    }
                }
                
                @if (mainMediaItem != null)
                {
                    @if (isMainVideo)
                    {
                        // VİDEO İÇİN YAPI
                        <div class="main-media-container">
                            <video src="@mainMediaItem.Url()"
                                   class="main-project-media"
                                   id="mainProjectMedia"
                                   controls
                                   autoplay
                                   muted
                                   playsinline>
                            </video>
                            
                            <div class="video-click-overlay" onclick="openLightbox(0)"></div>
                        </div>
                    }
                    else
                    {
                        // RESİM İÇİN YAPI (Resimler için overlay'e gerek yok)
                        <div class="main-media-container" onclick="openLightbox(0)">
                             <img src="@mainMediaItem.Url()"
                                 alt="@Model.Value("projectName")"
                                 class="main-project-media"
                                 id="mainProjectMedia" />
                        </div>
                    }
                }

                
                @if (Model.HasValue("projectGallery"))
                {
                    <div class="gallery-section">
                        <div class="gallery-grid" id="galleryGrid">
                            @{
                                var allGalleryItems = Model.Value<IEnumerable<IPublishedContent>>("projectGallery").Take(10).ToList();
                                var currentIndex = 0;
                                
                                // Video'ları önce, resimleri sonra sırala
                                var sortedItems = allGalleryItems
                                    .OrderByDescending(item => 
                                        item.ContentType.Alias == "video" || 
                                        item.Url().EndsWith(".mp4") || 
                                        item.Url().EndsWith(".webm") || 
                                        item.Url().EndsWith(".ogg") ||
                                        item.Url().EndsWith(".mov") ||
                                        item.Url().EndsWith(".avi"))
                                    .ToList();
                            }
                            
                            @foreach (var item in sortedItems)
                            {
                                var isVideo = item.ContentType.Alias == "video" ||
                                              item.Url().EndsWith(".mp4") ||
                                              item.Url().EndsWith(".webm") ||
                                              item.Url().EndsWith(".ogg") ||
                                              item.Url().EndsWith(".mov") ||
                                              item.Url().EndsWith(".avi");
                                
                                <div class="gallery-item @(isVideo ? "video-item" : "")" data-index="@currentIndex" onclick="changeMainMedia('@item.Url()', '@Model.Value("projectName")', @currentIndex, @isVideo.ToString().ToLower())">
                                    @if (isVideo)
                                    {
                                        // Video içeriği olduğu gibi kalıyor...
                                        <video class="gallery-video" muted playsinline>
                                            <source src="@item.Url()" type="video/mp4">
                                        </video>
                                        <div class="video-overlay">
                                            <div class="play-icon">▶</div>
                                        </div>
                                    }
                                    else
                                    {
                                            var altText = item.Value<string>("umbracoAltText");
                                            
                                            if (string.IsNullOrWhiteSpace(altText))
                                            {
                                                altText = item.Name;
                                            }
                                        
                                        
                                        // 3. Temiz ve basit değişkeni alt etiketine yazdır.
                                        <img src="@item.Url()" alt="@altText" class="gallery-image">
                                    }
                                </div>
                                currentIndex++;
                            }
                        </div>
                    </div>
                }
            </div>

            <div class="details-section">
                <div class="project-description">
                    <span class="project-category">@Model.Value("projectLocation")'in Tarihi ve Doğasıyla Bütünleşen Yatırım</span>
                    <h1 class="hero-title tax2">@Model.Value("projectName")</h1>
                    <p>@Model.Value("projectDescription")</p>
                </div>

                <div class="project-stats">
                    <a href="#contact-sec" class="btn btn-outline-success btn-lg px-5 py-3 call-us-pulse">
                        Sizi Arayalım
                    </a>

                    @* --- YENİ EKLENEN PAYLAŞ BUTONU --- *@
                    <button id="shareProjectBtn" class="btn btn-outline-success btn-lg px-5 py-3 call-us-pulse">
                        <i class="fas fa-share-alt"></i> Paylaş
                    </button>
                </div>

                <div class="expandable-sections">
                    
                     <div class="expandable-item">
                        <div class="expandable-header">
                            <span>Proje Konumu</span>
                            <span class="icon">+</span>
                         </div>
                        <div class="expandable-content">
                            <div class="map-container">
                                <iframe 
                                     src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3008.8567676392077!2d28.97707!3d41.058!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zNDHCsDAzJzI4LjgiTiAyOMKwNTgnMzcuNCJF!5e0!3m2!1str!2str!4v1234567890"
                                    width="100%" 
                                     height="350" 
                                    style="border:0;" 
                                    allowfullscreen="" 
                                    loading="lazy" 
                                    referrerpolicy="no-referrer-when-downgrade">
                                </iframe>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@* --- SANAL TUR BÖLÜMÜ (Sadece virtualTourPath doluysa göster) --- *@
@if(Model.HasValue("virtualTourPath") && !string.IsNullOrEmpty(Model.Value<string>("virtualTourPath")))
{
    <section class="virtual-tour-section">
        <h2 class="section-title text-center mb-4">Projeyi 360° Gezin</h2>
        <div id="pano-preview" class="pano-preview-container">
            <div id="pano" style="width:100%;height:100%;"></div>
            <div class="pano-overlay">
                <button id="fullscreen-btn" class="btn btn-primary">Tam Ekran</button>
            </div>
            <button id="pano-close-btn" class="pano-close-btn">&times;</button>
        </div>
    </section>
}



@* --- YENİ DİĞER PROJELER BÖLÜMÜ --- *@
@if (otherProjects.Any())
{
    <section class="other-projects-section">
        <div class="container">
            <div class="section-header">
                <h2 class="section-title">Diğer Projelerimize Göz Atın</h2>
            </div>
            <div class="projects-grid">
                @foreach (var project in otherProjects)
                {
                    var projectSlug = GenerateSlug(project.Name);
                    <div class="project-card" data-location="@project.Name">
                        <div class="card-header">
                            <h3 class="card-title">@project.Name</h3>
                        </div>
                        <div class="card-image-container">
                            <img src="@project.Image" alt="@project.Name">
                            <div class="card-description-overlay">
                                <p>@project.Description</p>
                            </div>
                        </div>
                        <div class="card-actions">
                            <a href="/projeler/@projectSlug/" class="btn btn-primary">Projeyi İncele</a>
                            <button class="btn btn-secondary open-form-btn">Form Doldurun</button>
                        </div>
                    </div>
                }
            </div>
            @* --- YENİ EKLENEN BUTON --- *@
            <div style="text-align: center; margin-top: 40px;">
                <a href="/projeler/" class="btn btn-primary">Tüm Projeleri Göster</a>
            </div>
        </div>
    </section>
}

<div id="lightboxModal" class="lightbox-modal">
    <div class="lightbox-content">
        <span class="lightbox-close" onclick="closeLightbox()">×</span>
        
        <div class="lightbox-container">
            <button class="lightbox-prev" onclick="changeSlide(-1)">❮</button>
            <button class="lightbox-next" onclick="changeSlide(1)">❯</button>
             
            <div class="lightbox-image-wrapper">
                <img id="lightboxImage" src="" alt="" class="lightbox-image" style="display: none;">
                <video id="lightboxVideo" class="lightbox-video" controls style="display: none;">
                     <source src="" type="video/mp4">
                </video>
            </div>
            
            <div class="lightbox-counter">
                <span id="currentSlide">1</span> / <span id="totalSlides">10</span>
             </div>
            
            <div class="lightbox-thumbnails-container">
                <button class="thumbnail-nav-btn thumbnail-prev" onclick="scrollThumbnails(-1)">‹</button>
                <div class="lightbox-thumbnails" id="lightboxThumbnails">
                    </div>
                <button class="thumbnail-nav-btn thumbnail-next" onclick="scrollThumbnails(1)">›</button>
            </div>
        </div>
    </div>
</div>
@* --- YENİ EKLENEN PAYLAŞIM PENCERESİ (MODAL) --- *@
<div id="shareModal" class="share-modal-overlay">
    <div class="share-modal">
        <div class="share-modal-header">
            <h3>Projeyi Paylaş</h3>
            <button id="closeShareModal" class="share-modal-close">&times;</button>
        </div>
        <div class="share-modal-body">
            <p>Bu projeyi arkadaşlarınızla paylaşın!</p>
            <div class="social-links">
                <a href="#" class="social-link facebook" data-platform="facebook" aria-label="Facebook'ta paylaş"><i class="fab fa-facebook-f"></i></a>
                <a href="#" class="social-link twitter" data-platform="twitter" aria-label="Twitter'da paylaş"><i class="fab fa-twitter"></i></a>
                <a href="#" class="social-link whatsapp" data-platform="whatsapp" aria-label="WhatsApp'ta paylaş"><i class="fab fa-whatsapp"></i></a>
                <a href="#" class="social-link linkedin" data-platform="linkedin" aria-label="LinkedIn'de paylaş"><i class="fab fa-linkedin-in"></i></a>
                <a href="#" class="social-link telegram" data-platform="telegram" aria-label="Telegram'da paylaş"><i class="fab fa-telegram-plane"></i></a>
            </div>
            <div class="copy-link-container">
                <input type="text" id="shareUrlInput" readonly>
                <button id="copyUrlBtn">Kopyala</button>
            </div>
        </div>
    </div>
</div>

<style>
    .other-projects-section {
        padding: 80px 0;
        background-color: #f4f7f6;
        border-top: 1px solid #e0e0e0;
    }

    .other-projects-section .section-header {
        text-align: center;
        margin-bottom: 60px;
    }

    .other-projects-section .section-title {
        font-size: 2.8rem;
        color: #333;
    }

    .other-projects-section .projects-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 30px;
    }

.pano-preview-container {
    position: relative;
    width: 100%;
    height: 500px; /* Önizleme yüksekliği */
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
}

.pano-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.3);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.pano-preview-container:hover .pano-overlay {
    opacity: 1;
}

#fullscreen-btn {
    padding: 1rem 2.5rem;
    font-size: 1.2rem;
    border-radius: 50px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

/* Tam Ekran Modu Stilleri */
.pano-preview-container.fullscreen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 9999;
    border-radius: 0;
}

.pano-preview-container.fullscreen .pano-overlay {
    opacity: 0; /* Tam ekranda butonu gizle */
    pointer-events: none;
}
</style>

<!-- sanal tur style -->
<style>
    /* wwwroot/css/projectDetail.css dosyasının sonuna ekleyin */

/* --- YENİ EKLENEN ÇIKIŞ BUTONU STİLLERİ --- */
.pano-close-btn {
    position: fixed;
    top: 25px;
    right: 25px;
    width: 45px;
    height: 45px;
    background: rgba(0, 0, 0, 0.5);
    color: white;
    border: 2px solid rgba(255, 255, 255, 0.8);
    border-radius: 50%;
    font-size: 28px;
    font-weight: bold;
    line-height: 40px; /* Dikeyde ortalamak için */
    text-align: center;
    cursor: pointer;
    z-index: 100000; /* krpano'nun üzerinde kalması için */
    
    /* Başlangıçta gizli olacak */
    opacity: 0;
    visibility: hidden;
    transform: scale(0.8);
    transition: opacity 0.3s ease, transform 0.3s ease, visibility 0.3s;
}
/* Konteyner tam ekran moduna geçtiğinde butonu görünür yap */
.pano-preview-container.fullscreen .pano-close-btn {
    opacity: 1;
    visibility: visible;
    transform: scale(1);
}
/* Tam ekran modunun tüm ekranı kaplamaya devam etmesini sağlıyoruz */
.pano-preview-container.fullscreen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 9999;
    border-radius: 0;
    box-shadow: none; /* Tam ekranda gölge olmasın */
}

.pano-close-btn:hover {
    background: rgba(0, 0, 0, 0.8);
    transform: scale(1.1);
}

/* Sanal turun bulunduğu beyaz bölüme yatayda padding ekliyoruz */
.virtual-tour-section {
    padding: 0rem 160px; /* Üst/alt 4rem, Sağ/sol 40px boşluk */
    background-color: #f8f9fa;
}
@@media (max-width: 768px) {
.virtual-tour-section {
    padding: 0rem 10px; /* Üst/alt 4rem, Sağ/sol 40px boşluk */
    background-color: #f8f9fa;
}
.pano-overlay {
    opacity:1;
}
}
#fullscreen-btn {
    background-color: #045129; /* Arka plan yeşil */
    color: white; /* Yazı beyaz */
    padding: 1rem 2.5rem;
    font-size: 1.2rem;
    border-radius: 50px;
    border: 2px solid #045129; /* Kenarlık ekleyelim */
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    cursor: pointer;
    transition: background-color 0.3s ease, color 0.3s ease, transform 0.3s ease;
}

#fullscreen-btn:hover {
    background-color: white; /* Üzerine gelince arka plan beyaz */
    color: #045129; /* Üzerine gelince yazı yeşil */
    transform: scale(1.05); /* Hafif büyüme efekti */
}
@@media (max-width: 900px) and (orientation: landscape) {
    .pano-close-btn {
        /* * Konumunu ve z-index'ini yatay mod için tekrar tanımlayarak 
         * krpano'nun veya tarayıcının kendi arayüzünün altında kalmasını engelliyoruz.
         */
        position: fixed;
        z-index: 100000; /* En üstte olmasını garantile */
        top: 15px;      /* Yatay modda kenara daha yakın olsun */
        right: 15px;
        width: 40px;    /* Boyutunu biraz küçültelim */
        height: 40px;
        line-height: 36px; /* Dikey hizalama için ayar */
        font-size: 24px;
    }
}
</style>

<!-- PAYLAŞ BUTONU -->
<style>
/* wwwroot/css/projectDetail.css dosyasının sonuna ekleyin */

/* --- PAYLAŞ BUTONU VE PENCERESİ STİLLERİ --- */

/* Butonları yan yana hizalamak için */
.project-stats {
    display: flex;
    justify-content: center;
    gap: 15px;
    flex-wrap: wrap;
}

/* Paylaşım Penceresi (Modal) */
.share-modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.6);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10001; /* Kapatma butonundan bir katman altta */
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
}

.share-modal-overlay.active {
    opacity: 1;
    visibility: visible;
}

.share-modal {
    background: white;
    padding: 25px;
    border-radius: 16px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
    width: 90%;
    max-width: 500px;
    text-align: center;
    transform: scale(0.95);
    transition: transform 0.3s ease;
}

.share-modal-overlay.active .share-modal {
    transform: scale(1);
}

.share-modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
    border-bottom: 1px solid #eee;
    padding-bottom: 15px;
}

.share-modal-header h3 {
    margin: 0;
    font-size: 1.5rem;
    color: #333;
}

.share-modal-close {
    background: none;
    border: none;
    font-size: 2rem;
    color: #aaa;
    cursor: pointer;
}

.share-modal-body p {
    color: #666;
    margin-bottom: 25px;
}

.social-links {
    display: flex;
    justify-content: center;
    gap: 15px;
    margin-bottom: 25px;
}

.social-links a {
    color: white;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    text-decoration: none;
    transition: transform 0.2s ease;
}
.social-links a:hover {
    transform: scale(1.1);
}

.social-links .facebook { background-color: #1877F2; }
.social-links .twitter { background-color: #1DA1F2; }
.social-links .whatsapp { background-color: #25D366; }
.social-links .linkedin { background-color: #0A66C2; }
.social-links .telegram { background-color: #24A1DE; }

.copy-link-container {
    display: flex;
    border: 1px solid #ddd;
    border-radius: 8px;
    overflow: hidden;
}

.copy-link-container input {
    flex-grow: 1;
    border: none;
    padding: 10px 15px;
    font-size: 0.9rem;
    background: #f8f9fa;
    color: #333;
}
.copy-link-container input:focus {
    outline: none;
}

.copy-link-container button {
    background: #045129;
    color: white;
    border: none;
    padding: 0 20px;
    cursor: pointer;
    font-weight: 600;
    transition: background-color 0.2s ease;
}
.copy-link-container button:hover {
    background: #067833;
}
/* --- PAYLAŞIM PENCERESİ MOBİL GÖRÜNÜM DÜZENLEMELERİ --- */

@@media (max-width: 768px) {
    .share-modal {
        padding: 20px;
        width: 95%;
    }

    .share-modal-header {
        padding-bottom: 10px;
        margin-bottom: 10px;
    }

    .share-modal-header h3 {
        font-size: 1.3rem;
    }

    .share-modal-body p {
        margin-bottom: 20px;
        font-size: 0.9rem;
    }

    .social-links {
        gap: 10px;
        margin-bottom: 20px;
    }

    .social-links a {
        width: 45px;
        height: 45px;
        font-size: 1.3rem;
    }

    /* --- KOPYALA BUTONU SIĞMA SORUNU İÇİN GÜNCELLEME --- */
    .copy-link-container {
        display: flex; /* Flexbox'ı aktif hale getir */
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
    }

    .copy-link-container input {
        flex-grow: 1; /* Input alanının mevcut alanı doldurmasını sağla */
        min-width: 0; /* Input'un küçülebilmesine izin ver */
        border: none;
        padding: 8px 12px;
        font-size: 0.9rem;
        background: #f8f9fa;
        color: #333;
    }
    
    .copy-link-container input:focus {
        outline: none;
    }

    .copy-link-container button {
        flex-shrink: 0; /* Butonun küçülmesini engelle */
        background: #045129;
        color: white;
        border: none;
        padding: 0 18px; /* Butonun iç boşluğunu ayarla */
        cursor: pointer;
        font-weight: 600;
        font-size: 0.85rem; /* Yazı boyutunu hafifçe küçült */
        transition: background-color 0.2s ease;
    }

    .copy-link-container button:hover {
        background: #067833;
    }
}
</style>

<!-- PAYLAŞ BUTONU SCRİPT -->
<script>
// ===== PAYLAŞIM BUTONU FONKSİYONELLİĞİ =====
function initializeShareFunctionality() {
    const shareBtn = document.getElementById('shareProjectBtn');
    const shareModal = document.getElementById('shareModal');
    const closeShareModalBtn = document.getElementById('closeShareModal');
    const shareUrlInput = document.getElementById('shareUrlInput');
    const copyUrlBtn = document.getElementById('copyUrlBtn');
    const socialLinks = document.querySelectorAll('.social-link');

    if (!shareBtn || !shareModal) return;

    const pageUrl = window.location.href;
    const projectTitle = document.title;

    // Modalı aç
    shareBtn.addEventListener('click', () => {
        shareUrlInput.value = pageUrl;
        shareModal.classList.add('active');
    });

    // Modalı kapat
    function closeModal() {
        shareModal.classList.remove('active');
    }
    closeShareModalBtn.addEventListener('click', closeModal);
    shareModal.addEventListener('click', (e) => {
        if (e.target === shareModal) {
            closeModal();
        }
    });

    // Linki kopyala
    copyUrlBtn.addEventListener('click', () => {
        shareUrlInput.select();
        try {
            navigator.clipboard.writeText(pageUrl);
            copyUrlBtn.textContent = 'Kopyalandı!';
            setTimeout(() => {
                copyUrlBtn.textContent = 'Kopyala';
            }, 2000);
        } catch (err) {
            console.error('Link kopyalanamadı: ', err);
            // Fallback for older browsers
            document.execCommand('copy');
        }
    });

    // Sosyal medya linklerini işle
    socialLinks.forEach(link => {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            const platform = link.dataset.platform;
            let shareUrl = '';

            const encodedUrl = encodeURIComponent(pageUrl);
            const encodedTitle = encodeURIComponent(projectTitle);

            switch (platform) {
                case 'facebook':
                    shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodedUrl}`;
                    break;
                case 'twitter':
                    shareUrl = `https://twitter.com/intent/tweet?url=${encodedUrl}&text=${encodedTitle}`;
                    break;
                case 'whatsapp':
                    shareUrl = `https://api.whatsapp.com/send?text=${encodedTitle} ${encodedUrl}`;
                    break;
                case 'linkedin':
                    shareUrl = `https://www.linkedin.com/shareArticle?mini=true&url=${encodedUrl}&title=${encodedTitle}`;
                    break;
                case 'telegram':
                    shareUrl = `https://t.me/share/url?url=${encodedUrl}&text=${encodedTitle}`;
                    break;
            }

            if (shareUrl) {
                window.open(shareUrl, '_blank', 'width=600,height=400');
            }
        });
    });
}
// Fonksiyonu ana DOMContentLoaded olayına ekleyelim
document.addEventListener('DOMContentLoaded', function() {
    initializeShareFunctionality();
});
</script>

<script src="/Scripts/tour.js"></script>
<script src="/Scripts/projectDetail.js"></script>
<script src="/Scripts/project-cards.js"></script>